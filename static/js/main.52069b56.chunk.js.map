{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","memes","data","console","log","setState","event","_event$target","target","name","value","defineProperty","e","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","className","onSubmit","type","placeholder","onChange","Component","App","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"wKAWeA,MATf,WACI,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,2GAA2GC,IAAI,aACxHJ,EAAAC,EAAAC,cAAA,kFCgEGG,cAnEX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAM,CACPC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEjBX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IATVA,mFAYM,IAAAgB,EAAAb,KAChBc,MAAM,qCACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,IACPE,EAASF,EAASG,KAAlBD,MACPE,QAAQC,IAAIH,EAAM,IAClBL,EAAKS,SAAS,CAACd,YAAaU,2CAI3BK,GAAO,IAAAC,EACMD,EAAME,OAArBC,EADSF,EACTE,KAAMC,EADGH,EACHG,MACb3B,KAAKsB,SAALxB,OAAA8B,EAAA,EAAA9B,CAAA,GAAgB4B,EAAOC,yCAIdE,GACTA,EAAEC,iBACF,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWlC,KAAKI,MAAMI,YAAY2B,QAC5DC,EAAcpC,KAAKI,MAAMI,YAAYuB,GAASM,IACpDrC,KAAKsB,SAAS,CAAEf,UAAW6B,qCAK3B,OACI7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM6C,UAAU,YAAYC,SAAUvC,KAAKY,cACvCrB,EAAAC,EAAAC,cAAA,SACI+C,KAAK,OACLd,KAAK,UACLe,YAAY,WACZd,MAAO3B,KAAKI,MAAMC,QAClBqC,SAAU1C,KAAKS,eAEnBlB,EAAAC,EAAAC,cAAA,SACI+C,KAAK,OACLd,KAAK,aACLe,YAAY,cACZd,MAAO3B,KAAKI,MAAME,WAClBoC,SAAU1C,KAAKS,eAEnBlB,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,QACX/C,EAAAC,EAAAC,cAAA,OAAKC,IAAKM,KAAKI,MAAMG,YACrBhB,EAAAC,EAAAC,cAAA,MAAI6C,UAAU,OAAOtC,KAAKI,MAAMC,SAChCd,EAAAC,EAAAC,cAAA,MAAI6C,UAAU,UAAUtC,KAAKI,MAAME,qBA5D3BqC,aCWbC,MATf,WACE,OACErD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,EAAD,QCJNC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.52069b56.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return(\n        <header>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgKCYQwYN-XtiNy-yE8vgrshaM1_OpbbLN2TSZMwvRQ9ewyeK8\" alt=\"doge-pic\"/>\n            <p>Generate Your Meme</p>\n        </header>\n    )\n}\n\nexport default Header","import React, {Component} from 'react'\n\nclass MemeGenerator extends Component{\n    constructor() {\n        super()\n        this.state={\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n            }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        }\n    \n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                console.log(memes[1])\n                this.setState({allMemeImgs: memes})\n            })\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({[name]: value})\n\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({ randomImg: randMemeImg})\n    }\n\n\n    render() {\n        return(\n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange} \n                    />\n                    <button>Generate</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImg}/>\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n        \n    }\n}\n\nexport default MemeGenerator","import React from 'react'\nimport Header from './Header'\nimport MemeGenerator from './MemeGenerator'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  )\n}\n\nexport default App","import React  from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}